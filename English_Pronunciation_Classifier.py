import streamlit as st
import polars as pl

st.set_page_config(page_title="English Pronunciation Classifier", layout="centered")

st.title("üó£Ô∏è English Pronunciation Classifier")
st.markdown("""
Welcome to my interactive AI project
            
This app is designed to **Classify English Pronunciation**            
""")

# Navigation to modes
st.subheader("üöÄ Try it now")

col1, col2 = st.columns(2)

with col1:
    st.markdown("### üéØ Basic Mode")
    st.markdown("Compare your spoken words with the reference text.")
    if st.button("Try Basic Mode"):
        st.switch_page(r"pages\01_Practice_Pronunciation_(Basic).py")

with col2:
    st.markdown("### üß† Advanced Mode")
    st.markdown("Uses an ML classifier trained on audio features to score your pronunciation.")
    if st.button("Try Advanced Mode"):
        st.switch_page("pages/02_Practice_Pronunciation_(Advanced).py")

st.markdown("---")
st.subheader("‚öôÔ∏è System Overview")
with st.expander("Click here to view the details"):
    st.markdown("""
    #### Basic Mode
    - A reference sentence is generated by **Gemini**, serving as the target for pronunciation practice.
    - The generated sentence is processed by **Kokoro**, which synthesizes the corresponding audio.
    - The user listens to the audio and records their own voice by imitating it.
    - The user's speech is transcribed into text using **Whisper**, a state-of-the-art speech recognition model.
    - The transcription is then compared to the original text using a direct equality check (`==`), ensuring accuracy in pronunciation.
    
    #### Advanced Mode
    - A reference sentence is generated by **Gemini**, serving as the target for pronunciation practice.
    - The generated sentence is processed by **Kokoro**, which synthesizes the corresponding audio.
    - The user listens to the audio and records their own voice by imitating it.
    - The user's speech is transcribed into text using **Whisper**, a state-of-the-art speech recognition model.
    - The recorded audio is processed to extract **MFCC (Mel-Frequency Cepstral Coefficients)** features, representing key phonetic characteristics.
    - The MFCC features are padded to ensure consistent dimensionality across samples.
    - Several machine learning models are trained and evaluated to classify pronunciation quality.
    - The model produces a feedback label indicating one of five possible outcomes: **Excellent**, **Good**, **Understandable**, **Poor**, or **Extremely Poor**.
    """)

st.markdown("---")
st.markdown("#### Model Performance Comparison")
model_evaluation_df = pl.read_csv("files/model_evaluation.csv")
st.dataframe(model_evaluation_df)

st.markdown("---")
st.subheader("‚öôÔ∏è Tech Stack")
st.markdown("""
- Python
- Streamlit
- Whisper
- Huggingface
- Kokoro
- Gemini API
- Polars
- Sklearn
- Torch
- Scipy
- Torchaudio
- Soundfile
- Altair
- Numpy
- Pyloudnorm
""")




st.markdown("---")
st.markdown("üìÇ [View the source code on GitHub](https://github.com/DwikyXYudha/English-Pronunciation-Classifier)")
st.markdown("üßë‚Äçüíª Created by Dwiky - NLP Enthusiast")



